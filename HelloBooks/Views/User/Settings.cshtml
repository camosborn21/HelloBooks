@using HelloBooks.Models
@using HelloBooks.Utilities
@model HelloBooks.Models.ApplicationUser

@{
	ViewBag.Title = "Settings";
}

<h2>Settings</h2>

<div id="ReadingDifficultySettings" class="col-sm-12">
	<h4>Reading Difficulties</h4>
	<table class="table" id="difficultiesTable">
		<tr>
			<th>
				Difficulty
			</th>
			<th>
				Pages Per Hour
			</th>
			<th></th>
		</tr>
		@foreach (var item in Model.UserDefinedReadingDifficulties.OrderBy(m => m.PagesPerHour))
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.DifficultyTitle)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PagesPerHour)
				</td>
			</tr>
		}
		@{
			ReadingDifficulty newDifficulty = new ReadingDifficulty
			{
				User = Model,
				ApplicationUserId = Model.Id
			};
		}
		<tr id="showNewDifficultyPartialTableRow">
			<td colspan="3">
				<button id="showNewDifficultyPartial" class="btn btn-default" style="padding: 5px"><span class="glyphicon-plus"></span> Add New Reading Difficulty</button>
			</td>
		</tr>

		<tr id="newDifficultyTable" style="display: none">
			<td colspan="3">
				<table width="100%">
					@Html.Partial("_newReadingDifficultyPartial", newDifficulty)
				</table>
			</td>
		</tr>
	</table>
</div>

<div id="UserCalendar" class="col-sm-12">
	<h4>Google Calendar Integration</h4>
	@if (Model.GoogleCalendarId == null)
	{
		<div id="CalendarSelection">
			<p>To integrate HelloBooks with Google you must first select one of your existing Google Calendars or create a new one</p>

			<div id="CreateNewCalendar" class="col-md-6">
				<h5>Create New Calendar</h5>
				@using (Html.BeginForm("NewReadingCalendar", "User"))
				{
					@Html.AntiForgeryToken()
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-plus"></span>Create New HelloBooks.io Calendar</button>
				}
			</div>
			@{UserCalendarService service = new UserCalendarService(Model);}
			@if (service.GetUserOwnedCalendars().Count > 0)
			{
				<div id="SelectExistingCalendar" class="col-md-6">
					<h5>Use Existing Calendar</h5>
					@using (Html.BeginForm("UseExistingCalendar", "User"))
					{
						@Html.AntiForgeryToken()
						@Html.ValidationSummary(true, "", new { @class = "text-danger" })
						<h6>Google Calendars You Own</h6>
						@Html.HiddenFor(model=>model.Id, new {htmlAttibutes = new {@Value = Model.Id}})
						@Html.DropDownListFor(model => model.GoogleCalendarId, service.GetUserOwnedCalendars().Select(c => new SelectListItem
		 {
			 Text = c.Summary,
			 Value = c.Id
		 }), new { @class = "form-control" })
						<button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-ok"></span></button>
					}

				</div>
			}
		</div>
				}
				else
				{
					<div id="CurrentUserCalendar" class="col-lg-12">
						@{string calendarName = new UserCalendarService(Model).GetCalendarById(@Model.GoogleCalendarId).Summary; }
						<h4>Your current calendar is: @calendarName</h4>

					</div>
							}

</div>
@section ActionScripts
{
	<script>
		$("#showNewDifficultyPartial").on("click",
			function () {
				$("#showNewDifficultyPartialTableRow").hide();
				$("#newDifficultyTable").show("fade", 1000);
			})
	</script>
}
